ingress:
  enabled: true
  className: public-nginx
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
  hosts:
    - host: repo.azure.jenkins.io
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: tls-secret
      hosts:
        - repo.azure.jenkins.io

# TODO: link where PV and disk are defined (terraform Azure)
persistence:
  enabled: true
  size: 32
  storageClass: statically-provisionned
  # Deterministic name - https://cloud.google.com/kubernetes-engine/docs/how-to/persistent-volumes/preexisting-pd#pv_to_statefulset
  # to ensure the Terraform-managed PV can specify `claimRef`with the full generated name
  claimPrefix: data

nodeSelector:
  kubernetes.io/arch: arm64
tolerations:
  - key: "kubernetes.io/arch"
    operator: "Equal"
    value: "arm64"
    effect: "NoSchedule"

resources:
  limits:
    cpu: 2
    memory: 4096Mi
  requests:
    cpu: 1
    memory: 2048Mi

replicaCount: 2
affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
            - key: "app.kubernetes.io/name"
              operator: In
              values:
                - artifact-caching-proxy
        topologyKey: "kubernetes.io/hostname"

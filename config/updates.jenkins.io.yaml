global:
  ingress:
    enabled: true
    className: public-nginx
    annotations:
      "cert-manager.io/cluster-issuer": "letsencrypt-prod"
      "nginx.ingress.kubernetes.io/ssl-redirect": "true"
      "nginx.ingress.kubernetes.io/use-regex": "true"  # Required to allow regexp path matching with Nginx
    hosts:
      - host: mirrors.updates.jenkins.io
        paths:
          # Only send request to files with these extensions to mirrorbits
          - path: /.*[.](html|json|txt|TIME)$  # Requires the regexp engine of Nginx to be enabled
            pathType: ImplementationSpecific
            backendService: mirrorbits
    tls:
      - secretName: updates-jenkins-io-mirrorbits-tls
        hosts:
          - mirrors.updates.jenkins.io
    additionalIngresses:
      - className: public-nginx
        annotations:
          "cert-manager.io/cluster-issuer": "letsencrypt-prod"
          "nginx.ingress.kubernetes.io/ssl-redirect": "true"
          "nginx.ingress.kubernetes.io/use-regex": "true"  # Required to allow regexp path matching with Nginx
          "nginx.ingress.kubernetes.io/rewrite-target": "/$1$2/index.html"
        hosts:
          - host: mirrors.updates.jenkins.io
            paths:
              # Otherwise redirect with rewrite the request by appending `/index.html` as you want a directory listing
              - path: /(.*)(/|$)  # Requires the regexp engine of Nginx to be enabled
                pathType: ImplementationSpecific
                backendService: mirrorbits
        tls:
          - secretName: updates-jenkins-io-mirrorbits-tls
            hosts:
              - mirrors.updates.jenkins.io

  storage:
    enabled: true
    claimNameTpl: '{{ include "mirrorbits-parent.pvc-name" $ }}'
    storageClassName: azurefile-csi-premium
    storageSize: 2Gi  # See file share size in https://github.com/jenkins-infra/azure/blob/main/updates.jenkins.io.tf
    accessModes:
      - ReadOnlyMany
    persistentVolume:
      azureFile:
        resourceGroup: updates-jenkins-io
        shareName: updates-jenkins-io
        readOnly: true
      additionalSpec:
        persistentVolumeReclaimPolicy: Retain
        mountOptions:
          - dir_mode=0755
          - file_mode=0644
          - uid=1000
          - gid=1000
          - mfsymlinks
          - nobrl
          - serverino
          - cache=strict

mirrorbits:
  enabled: true
  replicaCount: 2
  resources:
    limits:
      cpu: 2
      memory: 2048Mi
    requests:
      cpu: 100m
      memory: 200Mi
  nodeSelector:
    kubernetes.io/arch: amd64
  config:
    gzip: true
    traceFile: /TIME
    redis:
      address: updates-jenkins-io.redis.cache.windows.net:6379
      # password is stored in SOPS secrets
      dbId: 0
    scanInterval: 10
    repositoryScanInterval: 10
    checkInterval: 1
    disallowRedirects: true
    disableOnMissingFile: false
    # No fallbacks
  geoipdata:
    persistentData:
      enabled: true
      capacity: 1Gi
      storageClassName: statically-provisionned
      csi:
        driver: file.csi.azure.com
        fsType: ext4
        nodeStageSecretRef:
          name: geoip-data
          namespace: geoip-data
        volumeAttributes:
          resourceGroup: publick8s
          shareName: geoip-data
        volumeHandle: https://publick8spvdata.file.core.windows.net/geoip-data

httpd:
  enabled: false

rsyncd:
  enabled: true
  configuration:
    components:
      - name: jenkins
        path: /rsyncd/data/jenkins
        comment: "Jenkins Read-Only Mirror"
        volumeTpl: '{{ include "mirrorbits-parent.pvc-name" . }}'
  podSecurityContext:
    runAsUser: 65534  # User 'nobody'
    runAsGroup: 65534  # Group 'nogroup'
    runAsNonRoot: true
  containerSecurityContext:
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL

  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 64Mi

  nodeSelector:
    kubernetes.io/arch: arm64
  tolerations:
    - key: "kubernetes.io/arch"
      operator: "Equal"
      value: "arm64"
      effect: "NoSchedule"

serviceaccount:
  enabled: true

---
ingress:
  enabled: true
  className: public-nginx
  annotations:
    "cert-manager.io/cluster-issuer": "letsencrypt-prod"
    "nginx.ingress.kubernetes.io/ssl-redirect": "true"
  hosts:
    - host: builds.reports.jenkins.io
      paths:
        - path: /
  tls:
    - secretName: reports-tls
      hosts:
        - builds.reports.jenkins.io

resources:
  limits:
    cpu: 200m
    memory: 256Mi
  requests:
    cpu: 20m
    memory: 32Mi
htmlVolume:
  persistentVolumeClaim:
    claimName: builds-reports-jenkins-io

# No HA needed
replicaCount: 1

nodeSelector:
  kubernetes.io/arch: arm64

tolerations:
  - key: "kubernetes.io/arch"
    operator: "Equal"
    value: "arm64"
    effect: "NoSchedule"

affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
            - key: "app.kubernetes.io/name"
              operator: In
              values:
                - reports
        topologyKey: "kubernetes.io/hostname"

nginx:
  overrideLocations: |
    location / {
      root   /usr/share/nginx/html;
      index  index.html index.htm;
      autoindex on;

      # Enable CORS from https://www.jenkins.io
      #
      add_header Access-Control-Allow-Origin      "https://www.jenkins.io";
      add_header Vary                             "Origin";
      add_header Access-Control-Allow-Credentials true;
      add_header Access-Control-Allow-Headers     $http_access_control_request_headers;
      add_header Access-Control-Allow-Methods     $http_access_control_request_method;
    }

podAnnotations:
  ad.datadoghq.com/nginx-website.logs: |
    [
      {"source":"nginx","service":"builds.reports.jenkins.io"}
    ]

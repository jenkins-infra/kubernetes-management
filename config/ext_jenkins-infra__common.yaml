serviceAccount:
  create: true
  name: jenkins-controller
serviceAccountAgent:
  create: true
  name: jenkins-agent
rbac:
  create: true
  readSecrets: true
persistence:
  enabled: true
  size: 50Gi
agent:
  componentName: "agent"
networkPolicy:
  enabled: true
  internalAgents:
    allowed: true
    namespaceLabels:
      name: "jenkins-infra"
controller:
  image: jenkinsciinfra/jenkins-weekly
  tag: 0.95.3-2.386
  imagePullPolicy: IfNotPresent
  nodeSelector:
    kubernetes.io/os: linux
    kubernetes.azure.com/agentpool: linuxpool
  resources:
    limits:
      cpu: "2"
      memory: "4Gi"
    requests:
      cpu: "2"
      memory: "4Gi"
  probes:
    startupProbe:
      initialDelaySeconds: 120
    livenessProbe:
      initialDelaySeconds: 120
    readinessProbe:
      initialDelaySeconds: 120
  testEnabled: false
  overwritePlugins: true
  serviceType: "ClusterIP"
  javaOpts: >-
    -XshowSettings:vm -XX:+UseStringDeduplication -XX:+ParallelRefProcEnabled -XX:+DisableExplicitGC -XX:MaxRAM=4g -XX:+AlwaysPreTouch -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp/ -XX:+UseG1GC -Dorg.csanchez.jenkins.plugins.kubernetes.pipeline.ContainerExecDecorator.websocketConnectionTimeout=60
  JCasC:
    enabled: true
    defaultConfig: false
    configScripts:
      security: |
        security:
          scriptApproval:
            approvedSignatures:
              - "method org.jenkinsci.plugins.workflow.steps.FlowInterruptedException getCauses"
              - "new java.lang.RuntimeException java.lang.Throwable"
          gitHostKeyVerificationConfiguration:
            sshHostKeyVerificationStrategy:
              manuallyProvidedKeyVerificationStrategy:
                approvedHostKeys: "github.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl"
      ldap-settings: |
        jenkins:
          securityRealm:
            ldap:
              configurations:
                - server: "${LDAP_SERVER}"
                  rootDN: "${LDAP_ROOT_DN}"
                  managerDN: "${LDAP_MANAGER_DN}"
                  managerPasswordSecret: "${LDAP_MANAGER_PASSWORD}"
                  mailAddressAttributeName: "mail"
                  userSearch: cn={0}
                  userSearchBase: "ou=people"
                  groupSearchBase: "ou=groups"
              disableMailAddressResolver: false
              groupIdStrategy: "caseInsensitive"
              userIdStrategy: "caseInsensitive"
              cache:
                size: 100
                ttl: 300
      advisor-settings: |
        jenkins:
          disabledAdministrativeMonitors:
            - com.cloudbees.jenkins.plugins.advisor.Reminder
        advisor:
          acceptToS: true
          ccs:
          - "damien.duportal@gmail.com"
          email: "jenkins-infra-team@googlegroups.com"
          excludedComponents:
            - "ItemsContent"
            - "GCLogs"
            - "Agents"
            - "RootCAs"
            - "SlaveLogs"
            - "HeapUsageHistogram"
          nagDisabled: true
      pipeline-library: |
        unclassified:
          location:
            url: "https://infra.ci.jenkins.io"
          globalLibraries:
            libraries:
            - cachingConfiguration:
                excludedVersionsStr: "pull/"
                refreshTimeMinutes: 180
              defaultVersion: "master"
              implicit: true
              name: "pipeline-library"
              includeInChangesets: false
              retriever:
                modernSCM:
                  scm:
                    git:
                      credentialsId: "github-app-infra"
                      remote: "https://github.com/jenkins-infra/pipeline-library.git"
      artifact-caching-proxy: |
        unclassified:
          globalConfigFiles:
            configs:
            - mavenSettings:
                comment: "Artifact caching proxy settings for the AWS provider"
                content: |
                  <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd">
                    <mirrors>
                      <mirror>
                          <id>aws-proxy</id>
                          <url>https://repo.aws.jenkins.io/public/</url>
                          <mirrorOf>repo.jenkins-ci.org</mirrorOf>
                      </mirror>
                      <mirror>
                          <id>aws-proxy-incrementals</id>
                          <url>https://repo.aws.jenkins.io/incrementals/</url>
                          <mirrorOf>incrementals</mirrorOf>
                      </mirror>
                    </mirrors>
                  </settings>
                id: "artifact-caching-proxy-aws"
                isReplaceAll: true
                name: "AWS Artifact Caching Proxy"
                providerId: "org.jenkinsci.plugins.configfiles.maven.MavenSettingsConfig"
                serverCredentialMappings:
                - credentialsId: "artifact-caching-proxy-credentials"
                  serverId: "aws-proxy"
                - credentialsId: "artifact-caching-proxy-credentials"
                  serverId: "aws-proxy-incrementals"
            - mavenSettings:
                comment: "Artifact caching proxy settings for the Azure provider"
                content: |
                  <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd">
                    <mirrors>
                      <mirror>
                          <id>azure-proxy</id>
                          <url>https://repo.azure.jenkins.io/public/</url>
                          <mirrorOf>repo.jenkins-ci.org</mirrorOf>
                      </mirror>
                      <mirror>
                          <id>azure-proxy-incrementals</id>
                          <url>https://repo.azure.jenkins.io/incrementals/</url>
                          <mirrorOf>incrementals</mirrorOf>
                      </mirror>
                    </mirrors>
                  </settings>
                id: "artifact-caching-proxy-azure"
                isReplaceAll: true
                name: "Azure Artifact Caching Proxy"
                providerId: "org.jenkinsci.plugins.configfiles.maven.MavenSettingsConfig"
                serverCredentialMappings:
                - credentialsId: "artifact-caching-proxy-credentials"
                  serverId: "azure-proxy"
                - credentialsId: "artifact-caching-proxy-credentials"
                  serverId: "azure-proxy-incrementals"
            - mavenSettings:
                comment: "Artifact caching proxy settings for the DigitalOcean provider"
                content: |
                  <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd">
                    <mirrors>
                      <mirror>
                          <id>do-proxy</id>
                          <url>https://repo.do.jenkins.io/public/</url>
                          <mirrorOf>repo.jenkins-ci.org</mirrorOf>
                      </mirror>
                      <mirror>
                          <id>do-proxy-incrementals</id>
                          <url>https://repo.do.jenkins.io/incrementals/</url>
                          <mirrorOf>incrementals</mirrorOf>
                      </mirror>
                    </mirrors>
                  </settings>
                id: "artifact-caching-proxy-do"
                isReplaceAll: true
                name: "DigitalOcean Artifact Caching Proxy"
                providerId: "org.jenkinsci.plugins.configfiles.maven.MavenSettingsConfig"
                serverCredentialMappings:
                - credentialsId: "artifact-caching-proxy-credentials"
                  serverId: "do-proxy"
                - credentialsId: "artifact-caching-proxy-credentials"
                  serverId: "do-proxy-incrementals"
      matrix-settings: |
        jenkins:
          authorizationStrategy:
            globalMatrix:
              permissions:
                - "GROUP:Job/Build:authenticated"
                - "GROUP:Job/ExtendedRead:authenticated"
                - "GROUP:Job/Read:authenticated"
                - "GROUP:Overall/Administer:admins"
                - "GROUP:Overall/Administer:jenkins-admins"
                - "GROUP:Overall/Read:authenticated"
                - "GROUP:Overall/SystemRead:authenticated"
      pipeline-settings: |
        unclassified:
          timestamper:
            allPipelines: true
          shell:
            shell: "/bin/bash"
      system-settings: |
        unclassified:
          defaultFolderConfiguration:
            # Keep healthMetrics an empty list to ensure weather is disabled
            healthMetrics: []
        jenkins:
          quietPeriod: 0 # No need to wait between build scheduling
          disabledAdministrativeMonitors:
            - "jenkins.security.QueueItemAuthenticatorMonitor"
      datadog: |
        unclassified:
          datadogGlobalConfiguration:
            ciInstanceName: "infra.ci.jenkins.io"
            collectBuildLogs: false
            # Send events on configuration changes to jobs or changes to jenkins. These events include changes by the system which may be frequent and redundant.
            emitConfigChangeEvents: true
            emitSecurityEvents: true
            emitSystemEvents: true
            enableCiVisibility: true
            hostname: "infra.ci.jenkins.io"
            # A list of tags to apply globally to all submissions.
            globalTags: "controller:infra.ci.jenkins.io"
            # Refresh Dogstatsd Client when your agent IP changes
            refreshDogstatsdClient: true
            reportWith: "DSD"
            retryLogs: true
            targetApiURL: "https://api.datadoghq.com/api/"
            targetHost: "datadog.datadog.svc.cluster.local"
            targetLogIntakeURL: "https://http-intake.logs.datadoghq.com/v1/input/"
            targetPort: 8125
            targetTraceCollectionPort: 8126
      tools-config: |
        tool:
          jdk:
            installations:
            - name: "jdk8"
              properties:
              - installSource:
                  installers:
                  - zip:
                      label: "linux && amd64"
                      subdir: "jdk8u345-b01"
                      url: "https://github.com/adoptium/temurin8-binaries/releases/download/jdk8u345-b01/OpenJDK8U-jdk_x64_linux_hotspot_8u345b01.tar.gz"
                  - zip:
                      label: "windows"
                      subdir: "jdk8u345-b01"
                      url: "https://github.com/adoptium/temurin8-binaries/releases/download/jdk8u345-b01/OpenJDK8U-jdk_x64_windows_hotspot_8u345b01.zip"
                  - zip:
                      label: "linux && arm64"
                      subdir: "jdk8u345-b01"
                      url: "https://github.com/adoptium/temurin8-binaries/releases/download/jdk8u345-b01/OpenJDK8U-jdk_aarch64_linux_hotspot_8u345b01.tar.gz"
            - name: "jdk11"
              properties:
              - installSource:
                  installers:
                  - zip:
                      label: "linux && amd64"
                      subdir: "jdk-11.0.16.1+1"
                      url: "https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.16.1+1/OpenJDK11U-jdk_x64_linux_hotspot_11.0.16.1_1.tar.gz"
                  - zip:
                      label: "windows"
                      subdir: "jdk-11.0.16.1+1"
                      url: "https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.16.1+1/OpenJDK11U-jdk_x64_windows_hotspot_11.0.16.1_1.zip"
                  - zip:
                      label: "linux && arm64"
                      subdir: "jdk-11.0.16.1+1"
                      url: "https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.16.1+1/OpenJDK11U-jdk_aarch64_linux_hotspot_11.0.16.1_1.tar.gz"
            - name: "jdk17"
              properties:
              - installSource:
                  installers:
                  - zip:
                      label: "linux && amd64"
                      subdir: "jdk-17.0.4.1+1"
                      url: "https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.4.1+1/OpenJDK17U-jdk_x64_linux_hotspot_17.0.4.1_1.tar.gz"
                  - zip:
                      label: "windows"
                      subdir: "jdk-17.0.4.1+1"
                      url: "https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.4.1+1/OpenJDK17U-jdk_x64_windows_hotspot_17.0.4.1_1.zip"
                  - zip:
                      label: "linux && arm64"
                      subdir: "jdk-17.0.4.1+1"
                      url: "https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.4.1+1/OpenJDK17U-jdk_aarch64_linux_hotspot_17.0.4.1_1.tar.gz"
          maven:
            installations:
            - name: "mvn"
              properties:
              - installSource:
                  installers:
                  - maven:
                      id: "3.8.6"
  sidecars:
    configAutoReload:
      env:
        # https://github.com/kiwigrid/k8s-sidecar#configuration-environment-variables
        - name: METHOD
          # Polling mode (instead of watching kube API)
          value: "SLEEP"
        # https://github.com/kiwigrid/k8s-sidecar#configuration-environment-variables
        - name: SLEEP_TIME
          # Time in seconds between two polls
          value: "60"
  installPlugins: false
  ingress:
    enabled: true
    hostName: infra.ci.jenkins.io
    annotations:
      "cert-manager.io/cluster-issuer": "letsencrypt-prod"
      "nginx.ingress.kubernetes.io/proxy-body-size": "500m"
    ingressClassName: private-nginx
    tls:
      - hosts:
          - infra.ci.jenkins.io
        secretName: infra.ci.jenkins.io-cert
  secondaryingress:
    enabled: true
    paths:
      - /github-webhook
    hostName: infra-webhooks.ci.jenkins.io
    ingressClassName: public-nginx
    annotations:
      "cert-manager.io/cluster-issuer": "letsencrypt-prod"
      "nginx.ingress.kubernetes.io/ssl-redirect": "true"
    tls:
      - hosts:
          - infra-webhooks.ci.jenkins.io
        secretName: infra-webhooks.ci.jenkins.io-cert

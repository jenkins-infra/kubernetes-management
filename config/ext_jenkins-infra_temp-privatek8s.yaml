controller:
  JCasC:
    configScripts:
      credentials: |
        credentials:
          system:
            domainCredentials:
              - credentials:
                - gitHubApp:
                    appID: "${GITHUB_APP_ID}"
                    description: "GitHub App for infra.ci.jenkins.io"
                    id: "github-app-infra"
                    privateKey: "${GITHUB_APP_PRIVATE_KEY}"
                    scope: GLOBAL
                - gitHubApp:
                    appID: "${GITHUB_APP_JENKINS_INFRA_UPDATECLI_ID}"
                    description: "GitHub App for updatecli tasks on jenkins-infra org"
                    id: "github-app-updatecli-on-jenkins-infra"
                    privateKey: "${GITHUB_APP_JENKINS_INFRA_UPDATECLI_PRIVATE_KEY}"
                    owner: "jenkins-infra"
                    scope: GLOBAL
                - usernamePassword:
                    description: "Credentials to access an artifact caching proxy"
                    id: "artifact-caching-proxy-credentials"
                    password: "${ARTIFACT_CACHING_PROXY_PASSWORD}"
                    scope: GLOBAL
                    username: "MY-USERNAME"
                - basicSSHUserPrivateKey:
                    scope: SYSTEM
                    id: "ec2-agents-privkey"
                    username: "key"
                    description: "SSH privkey used to connect to EC2 agents"
                    privateKeySource:
                      directEntry:
                        privateKey: "${EC2_AGENTS_PRIVKEY}"
                - aws:
                    accessKey: "${EC2_AWS_ACCESS_KEY_ID}"
                    description: "This credential is used to provision dynamic agents on AWS EC2"
                    id: "ec2-agents-credentials"
                    scope: SYSTEM
                    secretKey: "${EC2_AWS_SECRET_ACCESS_KEY}"
                - file:
                    fileName: "kubeconfig"
                    id: "kubeconfig-controller"
                    description: "Kubeconfig file for temp-privatek8s"
                    scope: SYSTEM
                    secretBytes: "${base64:${KUBECONFIG_TEMP_PRIVATEK8S}}"
      agent-settings: |
        jenkins:
          numExecutors: 0
          clouds:
            - kubernetes:
                credentialsId: "kubeconfig-controller"
                containerCapStr: "100"
                # Kubernetes internal URL to stay within private networks
                jenkinsUrl: "http://jenkins-infra.jenkins-infra.svc.cluster.local:8080"
                maxRequestsPerHostStr: "300"
                webSocket: true
                name: "kubernetes"
                namespace: "jenkins-agents"
                podRetention: "Never"
                serverUrl: ${AGENTS_KUBERNETES_CLUSTER_URL}
                serverCertificate: |
                  ${AGENTS_KUBERNETES_CLUSTER_CERT}
                podLabels:
                  # Required to be jenkins/<helm-release>-jenkins-slave as defined here
                  # https://github.com/helm/charts/blob/ef0d749132ecfa61b2ea47ccacafeaf5cf1d3d77/stable/jenkins/templates/jenkins-master-networkpolicy.yaml#L27
                  - key: "jenkins/jenkins-infra-agent"
                    value: "true"
                templates:
                  - name: jnlp-linux
                    nodeSelector: "kubernetes.io/os=linux"
                    containers:
                      - name: jnlp
                        image: "jenkins/inbound-agent:latest-jdk11"
                        envVars:
                        - envVar:
                            key: "JENKINS_JAVA_BIN"
                            value: "/opt/java/openjdk/bin/java"
                        resourceLimitCpu: "500m"
                        resourceLimitMemory: "512Mi"
                        resourceRequestCpu: "500m"
                        resourceRequestMemory: "512Mi"
                        alwaysPullImage: true
                    yamlMergeStrategy: "merge"
                    yaml: |-
                      apiVersion: v1
                      kind: Pod
                      spec:
                        tolerations:
                        - key: "jenkins"
                          operator: "Equal"
                          value: "infra.ci.jenkins.io"
                          effect: "NoSchedule"
                        - key: "kubernetes.azure.com/scalesetpriority"
                          operator: "Equal"
                          value: "spot"
                          effect: "NoSchedule"
                  - name: jnlp-windows
                    nodeSelector: "kubernetes.io/os=windows"
                    instanceCap: 5 # Usual sizing is 2 pods per Windows node, and max 3 windows nodes
                    instanceCapStr: "5"
                    containers:
                      - name: jnlp
                        image: "jenkinsciinfra/inbound-agent:windowsservercore-1809"
                        envVars:
                        - envVar:
                            key: "JENKINS_JAVA_BIN"
                            value: "C:/openjdk-11"
                        - envVar:
                            key: "JAVA_HOME"
                            value: "C:/openjdk-11"
                        command: "powershell"
                        args: "C:/ProgramData/Jenkins/jenkins-agent.ps1"
                        resourceLimitCpu: "1"
                        resourceLimitMemory: "1024Mi"
                        resourceRequestCpu: "1"
                        resourceRequestMemory: "1024Mi"
                        alwaysPullImage: true
                        workingDir: "C:\\Users\\jenkins"
                    yamlMergeStrategy: "merge"
                    label: "windows-2019-kubernetes"
                    yaml: |-
                      affinity:
                        nodeAffinity:
                          requiredDuringSchedulingIgnoredDuringExecution:
                            nodeSelectorTerms:
                            - matchExpressions:
                              - key: kubernetes.io/os
                                operator: In
                                values:
                                  - windows
                  - name: "jnlp-webbuilder"
                    nodeSelector: "kubernetes.io/os=linux"
                    yaml: |-
                      apiVersion: v1
                      kind: Pod
                      spec:
                        tolerations:
                        - key: "jenkins"
                          operator: "Equal"
                          value: "infra.ci.jenkins.io"
                          effect: "NoSchedule"
                        - key: "kubernetes.azure.com/scalesetpriority"
                          operator: "Equal"
                          value: "spot"
                          effect: "NoSchedule"
                    containers:
                      - name: "jnlp"
                        image: "jenkinsciinfra/builder@sha256:a4abe24f01e7162f0208d1a216a867a98080072ee4e4ca4d5899f7e3388aa482"
                        command: "/usr/local/bin/jenkins-agent"
                        envVars:
                        - envVar:
                            key: "JENKINS_JAVA_OPTS"
                            value: "-XX:+PrintCommandLineFlags"
                        - envVar:
                            key: "JENKINS_JAVA_BIN"
                            value: "/opt/java/openjdk/bin/java"
                        - envVar:
                            key: "PATH"
                            value: "~/.asdf/shims:~/.asdf/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin"
                        - envVar:
                            key: "ARTIFACT_CACHING_PROXY_PROVIDER"
                            value: "azure"
                        resourceLimitCpu: "4"
                        resourceLimitMemory: "8G"
                        resourceRequestCpu: "4"
                        resourceRequestMemory: "8G"
                    label: "container kubernetes node ruby webbuilder"
                    yamlMergeStrategy: "merge"
            - amazonEC2:
                cloudName: "aws-us-east-2"
                credentialsId: "ec2-agents-credentials"
                instanceCapStr: "50"
                noDelayProvisioning: true
                region: "us-east-2"
                sshKeysCredentialsId: "ec2-agents-privkey"
                useInstanceProfileForCredentials: false
                templates:
                - ami: "ami-0f73bc52e078b0441" # https://github.com/jenkins-infra/packer-images/ LINUXAMD64 (DO NOT DELETE OR EDIT THIS COMMENT, USED BY UPDATECLI: https://github.com/jenkins-infra/kubernetes-management/blob/cd7e4132eef4095ca287e8c17b284d3c04234cb4/updatecli/updatecli.d/charts/jenkins-agents-infra-release.yaml#L73)
                  amiOwners: "200564066411"
                  associatePublicIp: true
                  connectBySSHProcess: false
                  connectionStrategy: PUBLIC_IP
                  deleteRootOnTermination: true
                  description: "AMD64 Ubuntu 20.04"
                  ebsOptimized: false
                  hostKeyVerificationStrategy: ACCEPT_NEW           # Secure: more flexible to save some time at startup
                  idleTerminationMinutes: "5"
                  instanceCapStr: "50"
                  javaPath: "/opt/jdk-11/bin/java"
                  labelString: "linux-amd64 linux-amd64-docker"
                  launchTimeoutStr: "180"
                  maxTotalUses: 1
                  minimumNumberOfInstances: 0
                  minimumNumberOfSpareInstances: 0
                  mode: EXCLUSIVE
                  monitoring: true
                  numExecutors: 1
                  remoteAdmin: "jenkins"
                  remoteFS: "/home/jenkins"
                  securityGroups: "ec2_agents_infraci"
                  stopOnTerminate: false
                  t2Unlimited: false
                  tags:
                  - name: "architecture"
                    value: "amd64"
                  - name: "os"
                    value: "linux"
                  - name: "jenkins"
                    value: "infra.ci.jenkins.io"
                  type: T3Medium # 2 vCPUs / 4 Gb
                  useEphemeralDevices: true
                - ami: "ami-0f73bc52e078b0441" # https://github.com/jenkins-infra/packer-images/ LINUXAMD64 (DO NOT DELETE OR EDIT THIS COMMENT, USED BY UPDATECLI: https://github.com/jenkins-infra/kubernetes-management/blob/cd7e4132eef4095ca287e8c17b284d3c04234cb4/updatecli/updatecli.d/charts/jenkins-agents-infra-release.yaml#L73)
                  amiOwners: "200564066411"
                  associatePublicIp: true
                  connectBySSHProcess: false
                  connectionStrategy: PUBLIC_IP
                  deleteRootOnTermination: true
                  description: "AMD64 Ubuntu 20.04 Big"
                  ebsOptimized: false
                  hostKeyVerificationStrategy: ACCEPT_NEW           # Secure: more flexible to save some time at startup
                  idleTerminationMinutes: "5"
                  instanceCapStr: "50"
                  javaPath: "/opt/jdk-11/bin/java"
                  labelString: "linux-amd64-big linux-amd64-docker-big highmem"
                  launchTimeoutStr: "180"
                  maxTotalUses: 1
                  minimumNumberOfInstances: 0
                  minimumNumberOfSpareInstances: 0
                  mode: EXCLUSIVE
                  monitoring: true
                  numExecutors: 1
                  remoteAdmin: "jenkins"
                  remoteFS: "/home/jenkins"
                  securityGroups: "ec2_agents_infraci"
                  stopOnTerminate: false
                  t2Unlimited: false
                  tags:
                  - name: "architecture"
                    value: "amd64"
                  - name: "os"
                    value: "linux"
                  - name: "jenkins"
                    value: "infra.ci.jenkins.io"
                  type: T3Xlarge # 4 vCPUs / 16 Gb
                  useEphemeralDevices: true
                - ami: "ami-0156de7059b410940" # https://github.com/jenkins-infra/packer-images/ LINUXARM64 (DO NOT DELETE OR EDIT THIS COMMENT, USED BY UPDATECLI: https://github.com/jenkins-infra/kubernetes-management/blob/cd7e4132eef4095ca287e8c17b284d3c04234cb4/updatecli/updatecli.d/charts/jenkins-agents-infra-release.yaml#L82)
                  amiOwners: "200564066411"
                  associatePublicIp: true
                  connectBySSHProcess: false
                  connectionStrategy: PUBLIC_IP
                  deleteRootOnTermination: true
                  description: "ARM64 Ubuntu 20.04"
                  ebsOptimized: false
                  hostKeyVerificationStrategy: ACCEPT_NEW           # Secure: more flexible to save some time at startup
                  idleTerminationMinutes: "5"
                  instanceCapStr: "50"
                  javaPath: "/opt/jdk-11/bin/java"
                  labelString: "arm64 linux-arm64 linux-arm64-docker"
                  launchTimeoutStr: "180"
                  maxTotalUses: 1
                  minimumNumberOfInstances: 0
                  minimumNumberOfSpareInstances: 0
                  mode: EXCLUSIVE
                  monitoring: true
                  numExecutors: 1
                  remoteAdmin: "jenkins"
                  remoteFS: "/home/jenkins"
                  securityGroups: "ec2_agents_infraci"
                  stopOnTerminate: false
                  t2Unlimited: false
                  tags:
                  - name: "architecture"
                    value: "arm64"
                  - name: "os"
                    value: "linux"
                  - name: "jenkins"
                    value: "infra.ci.jenkins.io"
                  type: T4gMedium # 2 vCPUs ARM64 Graviton / 4 Gb
                  useEphemeralDevices: true
                - ami: "ami-0ee4e66f89775c9c3" # https://github.com/jenkins-infra/packer-images/ WINDOWSAMD64 (DO NOT DELETE OR EDIT THIS COMMENT, USED BY UPDATECLI: https://github.com/jenkins-infra/kubernetes-management/blob/cd7e4132eef4095ca287e8c17b284d3c04234cb4/updatecli/updatecli.d/charts/jenkins-agents-infra-release.yaml#L91)
                  amiOwners: "200564066411"
                  associatePublicIp: true
                  connectBySSHProcess: false
                  connectionStrategy: PUBLIC_IP
                  deleteRootOnTermination: true
                  description: "Windows 2019 AMD64"
                  ebsOptimized: false
                  hostKeyVerificationStrategy: ACCEPT_NEW     # TODO: set it CHECK_NEW_HARD (slower but safer)
                  idleTerminationMinutes: "30"                # Windows instances are billed per hour, let's reuse
                  instanceCapStr: "50"
                  javaPath: "C:/tools/jdk-11/bin/java.exe"
                  labelString: "windows windows-amd64 windows-amd64-docker docker-windows"
                  launchTimeoutStr: "600"                     # Wait for Windows to start all the EC2 launch services
                  maxTotalUses: 10                            # Windows instances are billed per hour, let's reuse
                  minimumNumberOfInstances: 0
                  minimumNumberOfSpareInstances: 0
                  mode: EXCLUSIVE
                  monitoring: false
                  numExecutors: 1
                  remoteAdmin: "Administrator"
                  remoteFS: "C:/Jenkins"
                  securityGroups: "ec2_agents_infraci"
                  stopOnTerminate: false
                  t2Unlimited: false
                  tags:
                  - name: "architecture"
                    value: "amd64"
                  - name: "os"
                    value: "windows"
                  - name: "jenkins"
                    value: "infra.ci.jenkins.io"
                  tenancy: Default
                  tmpDir: "C:\\\\Temp"                          # Mandatory because EC2 plugins assumes SSH = Unix and searches for /tmp
                  type: T3Medium # 2 vCPUs / 4 Gb
                  useEphemeralDevices: true
  # Can be omitted, here to avoid modifying temp-privatek8s config
  podSecurityContextOverride:
    runAsNonRoot: true
    runAsUser: 1000
    supplementalGroups: [1000]

global:
  ingress:
    enabled: true
    className: public-nginx
    annotations:
      "cert-manager.io/cluster-issuer": "letsencrypt-prod"
      "nginx.ingress.kubernetes.io/ssl-redirect": "true"
      "nginx.ingress.kubernetes.io/use-regex": "true"  # Required to allow regexp path matching with Nginx
    hosts:
      - host: test.get.jenkins.io
        paths:
          - path: /
            backendService: httpd
          - path: /.*[.](deb|hpi|war|rpm|msi|pkg|sha256|md5sum|zip|gz|pdf|json|svg|sh|jpeg|ico|png|html)$  # Requires the regexp engine of Nginx to be enabled
            pathType: ImplementationSpecific
            backendService: mirrorbits
      - host: fallback.test.get.jenkins.io
        paths:
          - path: /
            backendService: httpd
    tls:
      - secretName: get-jenkins-io-tls
        hosts:
          - test.get.jenkins.io
          - fallback.test.get.jenkins.io
  storage:
    enabled: true
    claimNameTpl: '{{ include "mirrorbits-parent.pvc-name" $ }}'
    storageClassName: azurefile-csi-premium
    storageSize: 700Gi
    accessModes:
      - ReadOnlyMany
    persistentVolume:
      azureFile:
        resourceGroup: get-jenkins-io
        shareName: mirrorbits
        readOnly: true
      additionalSpec:
        persistentVolumeReclaimPolicy: Retain
        mountOptions:
          - dir_mode=0755
          - file_mode=0644
          - uid=1000
          - gid=1000
          - mfsymlinks
          - nobrl
          - serverino
          - cache=strict

mirrorbits:
  enabled: true
  replicaCount: 1
  nodeSelector:
    kubernetes.io/arch: amd64

httpd:
  enabled: true
  replicaCount: 1
  nodeSelector:
    kubernetes.io/arch: arm64
  tolerations:
    - key: "kubernetes.io/arch"
      operator: "Equal"
      value: "arm64"
      effect: "NoSchedule"

rsyncd:
  enabled: false

serviceaccount:
  enabled: false

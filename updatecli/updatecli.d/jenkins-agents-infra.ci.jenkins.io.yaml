name: Bump agent templates version for infra.ci.jenkins.io

scms:
  default:
    kind: github
    spec:
      user: "{{ .github.user }}"
      email: "{{ .github.email }}"
      owner: "{{ .github.owner }}"
      repository: "{{ .github.repository }}"
      token: "{{ requiredEnv .github.token }}"
      username: "{{ .github.username }}"
      branch: "{{ .github.branch }}"

sources:
  packerImageVersion:
    kind: githubrelease
    name: get last packer-image release
    spec:
      owner: "jenkins-infra"
      repository: "packer-images"
      token: "{{ requiredEnv .github.token }}"
      username: "{{ .github.username }}"

  getLatestInboundAllInOneContainerImageX86:
    kind: dockerdigest
    name: Get digest of the jenkinsciinfra/jenkins-agent-ubuntu-22.04 image
    dependson:
      - packerImageVersion
    spec:
      image: "jenkinsciinfra/jenkins-agent-ubuntu-22.04"
      tag: '{{ source "packerImageVersion"}}'
      architecture: linux/amd64

  getLatestInboundAllInOneContainerImageARM:
      kind: dockerdigest
      name: Get digest of the jenkinsciinfra/jenkins-agent-ubuntu-22.04 image
      dependson:
        - packerImageVersion
      spec:
        image: "jenkinsciinfra/jenkins-agent-ubuntu-22.04"
        tag: '{{ source "packerImageVersion"}}'
        architecture: linux/arm64

conditions:
  checkAllInOneContainerImages:
    # If the 2 Docker images are different, it means the release build of packer-images failed (and never pushed the multi-arch manifest as last stage)
    disablesourceinput: true
    name: Check that x86 and arm64 all-in-one images are different
    kind: shell
    spec:
      command: test {{ source "getLatestInboundAllInOneContainerImageX86" }} != {{ source "getLatestInboundAllInOneContainerImageARM" }}
  checkifazureimagejenkins-agent-ubuntu-22.04-amd64isavailable:
    kind: shell
    disablesourceinput: true
    spec:
      environments:
        - name: PATH
      command: az sig image-version list --resource-group prod-packer-images --gallery-name prod_packer_images --gallery-image-definition jenkins-agent-ubuntu-22.04-amd64 --query "[?tags.version == '{{ source `packerImageVersion` }}']" --output tsv
  checkifazureimagejenkins-agent-windows-2019-amd64isavailable:
    kind: shell
    disablesourceinput: true
    spec:
      environments:
        - name: PATH
      command: az sig image-version list --resource-group prod-packer-images --gallery-name prod_packer_images --gallery-image-definition jenkins-agent-windows-2019-amd64 --query "[?tags.version == '{{ source `packerImageVersion` }}']" --output tsv
  checkifazureimagejenkins-agent-ubuntu-22.04-arm64isavailable:
    kind: shell
    disablesourceinput: true
    spec:
      environments:
        - name: PATH
      command: az sig image-version list --resource-group prod-packer-images --gallery-name prod_packer_images --gallery-image-definition jenkins-agent-ubuntu-22.04-arm64 --query "[?tags.version == '{{ source `packerImageVersion` }}']" --output tsv

targets:
  setAzureGalleryImageVersion:
    sourceid: packerImageVersion
    name: "Bump Azure Gallery Image Version for azureVM"
    kind: file
    spec:
      file: config/jenkins_infra.ci.jenkins.io.yaml
      matchpattern: 'galleryImageVersion: ".*"'
      replacepattern: 'galleryImageVersion: "{{ source `packerImageVersion` }}"'
    scmid: default
  setJnlpLinuxArm64Image:
    sourceid: packerImageVersion
    name: "Bump docker image version for arm64"
    kind: file
    spec:
      file: config/jenkins_infra.ci.jenkins.io.yaml
      matchpattern: 'image: "jenkinsciinfra/jenkins-agent-ubuntu-22.04:.*'
      replacepattern: 'image: "jenkinsciinfra/jenkins-agent-ubuntu-22.04:{{ source `packerImageVersion` }}"'
    scmid: default

actions:
  default:
    kind: github/pullrequest
    scmid: default
    title: Bump agent templates for infra.ci.jenkins.io (packer-image {{ source `packerImageVersion` }})
    spec:
      labels:
        - dependencies
        - agent-templates
